{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid601\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid701\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid801\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid901\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls1\ilvl0
\f0\fs24 \cf0 {\listtext	1.	}
\fs22 \cf2 \expnd0\expndtw0\kerning0
 
\b MVVM JavaScript libraries
\b0 : MVVM (Model View ViewModel) is an architectural pattern based on MVC and MVP, which attempts to more clearly separate the development of user-interfaces (UI) from that of the business logic and behaviour in an application. To this end, many implementations of this pattern make use of declarative data bindings to allow a separation of work on Views from other layers. This facilitates UI and development work occurring almost simultaneously within the same codebase. UI developers write bindings to the ViewModel within their document markup (HTML), where the Model and ViewModel are maintained by developers working on the logic for the application. (source: {\field{\*\fldinst{HYPERLINK "https://addyosmani.com/blog/understanding-mvvm-a-guide-for-javascript-developers/"}}{\fldrslt \ul \ulc2 https://addyosmani.com/blog/understanding-mvvm-a-guide-for-javascript-developers/}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls2\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
JavaScripy MV* Frameworks:
\b0  are used to develop single-page applications (SPAs), and their notorious representatives, i.e. AngularJS, Ember, Backbone.js and newcomer React. While all frameworks provide out-of-the-box functionality, you will inevitably end up with a lot of custom code. Assuming you are developing more than one applications, you would like to be able to reuse that code, right? Ember is making use of a widget-based approach called Ember Components. It enables you to write your own \'91application-specific HTML tags\'92 using a Handlebars layout and the power of Ember\'92s backend infrastructure. Your custom element can be used in any Handlebars template you want. Keep in mind, though, that this is only possible at View level, while Controller level reuse is not supported by the Framework. Similar to Ember, Angular.js provides the ability to create custom HTML tags. Reusable components in Angular are called \'93directives\'94 and are significantly more powerful than Ember Components. In fact, you will be able to create your own semantic and reusable HTML syntax using those directives. On the other hand, you may also make use of Angular\'92s extend or mixin system like in Backbone.js and React. Backbone.js and React: The way Backbone.js and React solve reusable components is not new, yet it is very reliable. They both use the mixin system for code reuse. You may know this feature already from the dojo toolkit and might remember how powerful mixins can be. Both Backbone and React let you use mixins at view or even controller level, so that your components are not forced to be UI-related and may contain just some utilities or even complex program logic. (source: {\field{\*\fldinst{HYPERLINK "https://www.developereconomics.com/feature-comparison-of-4-popular-js-mv-frameworks"}}{\fldrslt \ul \ulc2 https://www.developereconomics.com/feature-comparison-of-4-popular-js-mv-frameworks}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls3\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
CMS (Adobe CQ5/AEM, Drupal, Wordpress,TYPO3): 
\b0 A content management system (CMS) is a software application or set of related programs that are used to create and manage digital content. CMSes are typically used for enterprise content management (ECM) and web content management (WCM). An ECM facilitates collaboration in the workplace by integrating document management, digital asset management and records retention functionalities, and providing end users with role-based access to the organization's digital assets. A WCM facilitates collaborative authoring for websites. ECM software often includes a WCM publishing functionality, but ECM webpages typically remain behind the organization's firewall. Both enterprise content management and web content management systems have two components: a content management application (CMA) and a content delivery application (CDA). The CMA is a graphical user interface (GUI) that allows the user to control the creation, modification and removal of content from a website without needing to know anything about HTML.  The CDA component provides the back-end services that support management and delivery of the content once it has been created in the CMA. Features can vary amongst the various CMS offerings, but the core functions are often considered to be indexing, search and retrieval, format management, revision control and publishing. Intuitive indexing, search and retrieval features index all data for easy access through search functions and allow users to search by attributes such as publication dates, keywords or author. Format management facilitates turn scanned paper documents and legacy electronic documents into HTML or PDF documents. Revision features allow content to be updated and edited after initial publication. Revision control also tracks any changes made to files by individuals. Publishing functionality allows individuals to use a template or a set of templates approved by the organization, as well as wizards and other tools to create or modify content. A CMS may also provide tools for one-to-one marketing. One-to-one marketing is the ability of a website to tailor its content and advertising to a user's specific characteristics using information provided by the user or gathered by the site -- for instance, a particular user's page sequence pattern. For example, if the user visited a search engine and searched for digital camera, the advertising banners would feature businesses that sell digital cameras instead of businesses that sell garden products. (source: {\field{\*\fldinst{HYPERLINK "http://searchsoa.techtarget.com/definition/content-management-system"}}{\fldrslt \ul \ulc2 http://searchsoa.techtarget.com/definition/content-management-system}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls4\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
Distributed Cache
\b0  (eg: Coherence, Hazelcast) is an extension of the traditional concept of cache used in a single locale. A distributed cache may span multiple servers so that it can grow in size and in transactional capacity. It is mainly used to store application data residing in database and web session data. The idea of distributed caching[1] has become feasible now because main memory has become very cheap and network cards have become very fast, with 1 Gbit now standard everywhere and 10 Gbit gaining traction. Also, a distributed cache works well on lower cost machines usually employed for web servers as opposed to database servers which require expensive hardware (source: {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Distributed_cache"}}{\fldrslt \ul \ulc2 https://en.wikipedia.org/wiki/Distributed_cache}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls5\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
SDLC:
\b0  Software Development Life Cycle is a process used by software industry to design, develop and test high quality softwares. SDLC is a process followed for a software project, within a software organization. It consists of a detailed plan describing how to develop, maintain, replace and alter or enhance specific software. The life cycle defines a methodology for improving the quality of software and the overall development process. (source: {\field{\*\fldinst{HYPERLINK "https://www.tutorialspoint.com/sdlc/sdlc_overview.htm"}}{\fldrslt \ul \ulc2 https://www.tutorialspoint.com/sdlc/sdlc_overview.htm}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls6\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
SaaS:
\b0  Software as a service (SaaS) is a software distribution model in which a third-party provider hosts applications and makes them available to customers over the Internet. SaaS is one of three main categories of cloud computing, alongside infrastructure as a service (IaaS) and platform as a service (PaaS). SaaS removes the need for organizations to install and run applications on their own computers or in their own data centers. This eliminates the expense of hardware acquisition, provisioning and maintenance, as well as software licensing, installation and support. (source: {\field{\*\fldinst{HYPERLINK "http://searchcloudcomputing.techtarget.com/definition/Software-as-a-Service"}}{\fldrslt \ul \ulc2 http://searchcloudcomputing.techtarget.com/definition/Software-as-a-Service}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls7\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}{\field{\*\fldinst{HYPERLINK "http://ASP.net"}}{\fldrslt 
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
ASP.net}}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
 MVC: 
\b0 Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller. The ASP.NET MVC framework provides an alternative to the ASP.NET Web Forms pattern for creating Web applications. The ASP.NET MVC framework is a lightweight, highly testable presentation framework that (as with Web Forms-based applications) is integrated with existing ASP.NET features, such as master pages and membership-based authentication. MVC is a standard design pattern that many developers are familiar with. Some types of Web applications will benefit from the MVC framework. Others will continue to use the traditional ASP.NET application pattern that is based on Web Forms and postbacks. Other types of Web applications will combine the two approaches; neither approach excludes the other. The MVC pattern helps you create applications that separate the different aspects of the application (input logic, business logic, and UI logic), while providing a loose coupling between these elements. The pattern specifies where each kind of logic should be located in the application. The UI logic belongs in the view. Input logic belongs in the controller. Business logic belongs in the model. This separation helps you manage complexity when you build an application, because it enables you to focus on one aspect of the implementation at a time. For example, you can focus on the view without depending on the business logic. The loose coupling between the three main components of an MVC application also promotes parallel development. For example, one developer can work on the view, a second developer can work on the controller logic, and a third developer can focus on the business logic in the model (source: {\field{\*\fldinst{HYPERLINK "https://msdn.microsoft.com/en-us/library/dd381412(v=vs.108).aspx)"}}{\fldrslt \ul \ulc2 https://msdn.microsoft.com/en-us/library/dd381412(v=vs.108).aspx)}}
\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls8\ilvl0
\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
C#: 
\b0 (pronounced "C sharp") is a programming language that is designed for building a variety of applications that run on the .NET Framework. C# is simple, powerful, type-safe, and object-oriented. The many innovations in C# enable rapid application development while retaining the expressiveness and elegance of C-style languages. (source: {\field{\*\fldinst{HYPERLINK "https://msdn.microsoft.com/en-us/library/kx37x362.aspx"}}{\fldrslt \ul \ulc2 https://msdn.microsoft.com/en-us/library/kx37x362.aspx}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls9\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
enterprise mobile analytics:
\b0  To better service today\'92s decision makers and inform their need for proactive planning and strategic execution, organizations must deliver anytime/anyplace data access and analytical capabilities to a vast array of mobile devices. IT teams must quickly pilot and deploy new ways of delivering business intelligence to keep companies up to speed in areas like budgeting, selling and marketing, and better inform strategic decision making. (source: {\field{\*\fldinst{HYPERLINK "https://www.cognizant.com/InsightsWhitepapers/Mobile-Enterprise-Analytics-in-60-Minutes.pdf"}}{\fldrslt \ul \ulc2 https://www.cognizant.com/InsightsWhitepapers/Mobile-Enterprise-Analytics-in-60-Minutes.pdf}})\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 \
\pard\tx20\tx380\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\sl288\slmult1\partightenfactor0
\ls10\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}
\b\fs22 \cf2 \expnd0\expndtw0\kerning0
functional programming language eg: scala, erlang, haskell: 
\b0 In computer science, functional programming is a programming paradigm\'97a style of building the structure and elements of computer programs\'97that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data. It is a declarative programming paradigm, which means programming is done with expressions[1] or declarations[2] instead of statements. In functional code, the output value of a function depends only on the arguments that are input to the function, so calling a function f twice with the same value for an argument x will produce the same result f(x) each time. Eliminating side effects, i.e. changes in state that do not depend on the function inputs, can make it much easier to understand and predict the behavior of a program, which is one of the key motivations for the development of functional programming. Functional programming has its roots in lambda calculus, a formal system developed in the 1930s to investigate computability, the Entscheidungsproblem, function definition, function application, and recursion. Many functional programming languages can be viewed as elaborations on the lambda calculus. Another well-known declarative programming paradigm, logic programming, is based on relations.[3] In contrast, imperative programming changes state with commands in the source language, the most simple example being assignment. Imperative programming does have functions\'97not in the mathematical sense\'97but in the sense of subroutines. They can have side effects that may change the value of program state. Functions without return values therefore make sense. Because of this, they lack referential transparency, i.e. the same language expression can result in different values at different times depending on the state of the executing program. (source: {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Functional_programming"}}{\fldrslt \ul \ulc2 https://en.wikipedia.org/wiki/Functional_programming}})}